{"version":3,"sources":["serviceWorker.js","components/Option.js","components/FilteredQuestion.js","components/Answer.js","components/CheckBox.js","components/ResultQuestion.js","components/Quiz.js","actions/quizActions.js","constants/actionTypes.js","containers/QuizContainer.js","constants/quizCtrl.js","components/Main.js","constants/model.js","constants/helperService.js","reducers/data/quizReducers.js","reducers/index.js","store/configureStore.js","index.js"],"names":["Boolean","window","location","hostname","match","Option","_ref","option","question","onSelectOption","react_default","a","createElement","className","htmlFor","get","id","type","checked","onChange","filteredQuestion","currentPage","totalItems","name","options","rows","rowCounter","forEach","index","push","Fragment","dangerouslySetInnerHTML","__html","map","row","key","components_Option","undefined","Answer","questions","isAnswered","answered","toJS","Options","array","Selected","CheckBox","disabled","ResultQuestion","isCorrect","result","IsAnswer","subIndex","components_CheckBox","classNames","Quiz","onLoadQuiz","onChangeQuizName","onGoTo","onChangeMode","onSubmitHandler","mode","config","quiz","quizName","filteredQuestions","onLoad","value","react-hide","FilteredQuestion","onClick","components_Answer","components_ResultQuestion","loadQuiz","createAction","changeQuiz","selectOption","goTo","changeMode","submit","connect","state","getIn","dispatch","file","callback","data","axios","then","res","event","target","Main","QuizContainer","defaultConfig","allowBack","allowReview","autoMove","duration","pageSize","requiredAll","richText","shuffleQuestions","shuffleOption","showClock","showPager","theme","QuizState","Immutable","fromJS","Id","description","itemsPerPage","loading","watch","begin","end","slice","quizReducers","handleActions","LOAD_QUIZ","payload","out","i","arguments","length","hasOwnProperty","extend","temp","randomIndex","currentIndex","Math","floor","random","shuffle","set","CHANGE_QUIZ","_ref2","SELECT_OPTION","_ref3","GO_TO","_ref4","CHANGE_MODE","_ref5","SUBMIT","_ref6","rootReducer","combineReducers","initialState","Map","createStore","ReactDOM","render","es","store","components_Main","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6325a11e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst Option = ({\n    option,\n    question,\n    onSelectOption\n}) => {\n    return (\n        <div className=\"col-md-6\">\n            <div className=\"option\">\n                <label htmlFor={option.get('Id')}>\n                    <input id={option.get('Id')} type=\"checkbox\" checked={option.get('Selected') === true} \n                        onChange={onSelectOption(question, option)}/>\n                    {option.get('Name')}\n                </label>\n            </div>\t\n        </div>\n    )\n}\n\nexport default Option;","import React from 'react';\nimport Option from './Option';\n\nconst filteredQuestion = ({\n    currentPage,\n    totalItems,\n    name,\n    question,\n    options,\n    onSelectOption\n}) => {\n    // for every 2 options, treat as a row\n    const rows = [[]];\n    let rowCounter = 0;\n    options.forEach((option, index) =>{\n        if(index % 2 === 0){\n            rows[rowCounter] = [];\n            rows[rowCounter].push(option);\n        } else {\n            rows[rowCounter++].push(option);\n        }\n    });\n    return (\n        <>\n            <div className=\"label label-warning\">Question {currentPage} of {totalItems}.</div>\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    {/* display the html for question name */}\n                    <h2>{currentPage}. <span dangerouslySetInnerHTML={{__html: name}}></span></h2>\n                </div>\n            </div>\n            <div className=\"row text-left options\">\n            {\n                rows.map((row, index) => (\n                    <div className=\"row\" key={index}>\n                        <Option question={question} option={row[0]} onSelectOption={onSelectOption}/>\n                        {/* there are options of odd number */}\n                        {row[1] === undefined ? \"\" : <Option question={question} option={row[1]} onSelectOption={onSelectOption}/>}\n                    </div>\n                ))\n            }\n            </div>\n        </>\n    );\n};\n\nexport default filteredQuestion;","import React from 'react';\n\nconst Answer = ({\n    questions,\n    index\n}) => {\n    /*\n\t * Determine if a question is answered\n\t */\n    const isAnswered = (index) => {\n        let answered = 'Not Answered';\n        questions.toJS()[index].Options.forEach(function (option, index, array) {\n            if (option.Selected === true) {\n                answered = 'Answered';\n                return false;\n            }\n        });\n        return answered;\n    };\n    return (\n        <div className=\"col-sm-4\">\n            <div className={ isAnswered(index) === 'Answered'? 'answered': 'not-answered' }>{index + 1}. {isAnswered(index)}</div>\n        </div>\n    );\n};\n\nexport default Answer;","import React from 'react';\n\nconst CheckBox = ({\n    option\n}) => {\n    return (\n        // show correct answer if wrong\n        <div className={\"col-md-6\" + (!option.get('Selected') && option.get('IsAnswer') ? \" alert-success\" : \"\")}>\n            <input id={option.get('Id')} type=\"checkbox\" disabled=\"disabled\" checked={option.get('Selected') === true}/>\n                {option.get('Name')}\n        </div>\n    );\n};\n\nexport default CheckBox;","import React from 'react';\nimport classNames from 'classnames';\nimport CheckBox from './CheckBox';\n\nconst ResultQuestion = ({\n    questions,\n    index,\n    question\n}) => {\n    /*\n\t * Determine if a question is answered correctly\n\t */\n    const isCorrect = () => {\n        let result = 'wrong';\n        question.toJS().Options.forEach(function (option) {\n            if (option.Selected === true && option.IsAnswer === true) {\n                result = 'correct';\n            }\n        });\n        return result;\n    };\n\n    return (\n        <div className=\"result-question\">\n            <h4>{index + 1}. {question.get('Name')}</h4>\n            <div className=\"row\">\n            {\n                question.get('Options').map((option, subIndex) => (\n                    <CheckBox key={subIndex} option={option}/>\n                ))\n            }\n            </div>\n            <h4 className={classNames('alert', isCorrect(index) === 'correct'? 'alert-success': 'alert-danger')}>Your answer is {isCorrect()}.</h4>\n        </div>\n    );\n};\n\nexport default ResultQuestion;","import React from 'react';\nimport classNames from 'classnames';\nimport FilteredQuestion from './FilteredQuestion';\nimport Answer from './Answer';\nimport ResultQuestion from './ResultQuestion';\n\nconst Quiz = ({\n\tonLoadQuiz,\n\tonChangeQuizName,\n\tonSelectOption,\n\tonGoTo,\n\tonChangeMode,\n\tonSubmitHandler,\n\tmode,\n\tconfig,\n\tquiz,\n\tquizName,\n\tcurrentPage,\n\ttotalItems,\n\tquestions,\n\tfilteredQuestions\n}) => {\n\treturn (\n\t\t<div className=\"container\" onLoad={onLoadQuiz(quizName)}>\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-md-8\">\n\t\t\t\t\t\t<h3>Quiz Application</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-4 header-right\">\n\t\t\t\t\t\tSelect Quiz:\n\t\t\t\t\t\t<select id=\"quizList\" value={quizName} onChange={onChangeQuizName}>\n\t\t\t\t\t\t\t<option value=\"data/aspnet.json\">Asp.Net</option>\n\t\t\t\t\t\t\t<option value=\"data/csharp.json\">C Sharp</option>\n\t\t\t\t\t\t\t<option value=\"data/designPatterns.json\">Design Patterns</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<hr/>\n\t\t\t</div>\n\t\t\t<div id=\"quiz\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-md-12\"><h1 className=\"center\">{quiz.get('name')}</h1><hr /></div>\n\t\t\t\t</div>\n\t\t\t\t<div className={classNames({'react-hide': mode !== 'quiz'})}>\n\t\t\t\t\t{\n\t\t\t\t\t\tfilteredQuestions.map((question, index) => (\n\t\t\t\t\t\t\t<FilteredQuestion key={index} currentPage={currentPage} totalItems={totalItems} question={question} \n\t\t\t\t\t\t\t\tname={question.get('Name')} options={question.get('Options')} onSelectOption={onSelectOption}/>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t\t<hr />\n\t\t\t\t\t<div className=\"quizNav\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button className={classNames('btn', 'btn-default', {'react-hide': !config.get('allowBack')})} onClick={onGoTo(1)}>First</button>{\" \"}\n\t\t\t\t\t\t\t<button className={classNames('btn', 'btn-default', {'react-hide': !config.get('allowBack')})} onClick={onGoTo(currentPage - 1)}>Prev</button>{\" \"}\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={onGoTo(currentPage + 1)}>Next</button>{ \" \" }\n\t\t\t\t\t\t\t<button className={classNames('btn', 'btn-default', {'react-hide': !config.get('allowBack')})} onClick={onGoTo(totalItems)}>Last</button>{\" \"}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={classNames('row', 'review', {'react-hide': mode !== 'review'})}>\n\t\t\t\t{\n\t\t\t\t\tquestions.map((question, index) => (\n\t\t\t\t\t\t<Answer key={index} questions={questions} index={index}/>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<div className={classNames('result', {'react-hide': mode !== 'result'})}>\n\t\t        <h2>Quiz Result</h2>\n\t\t        {\n\t\t        \tquestions.map((question, index) => (\n\t\t\t\t\t\t<ResultQuestion key={index} questions={questions} index={index} question={question}/>\n\t\t\t\t\t))\n\t\t        }\n\t\t        <h4 className=\"alert alert-info text-center\">You may close this window now.</h4>\n\t\t    </div>\n\t\t\t<hr />\n\t\t\t<div className={classNames({'react-hide': mode === 'result'})}>\n\t\t\t\t<button className=\"btn btn-default\" onClick={onChangeMode('quiz')}>Quiz</button>{\" \"} \n\t\t\t\t<button className=\"btn btn-default\" onClick={onChangeMode('review')}>Review</button>{\" \" }\n\t\t\t\t<button className=\"btn btn-default\" onClick={onSubmitHandler('result')}>Submit Quiz</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Quiz;\n","import { createAction } from 'redux-actions';\nimport { \n\tLOAD_QUIZ,\n\tCHANGE_QUIZ,\n\tSELECT_OPTION,\n\tGO_TO,\n\tCHANGE_MODE,\n\tSUBMIT\n} from '../constants/actionTypes';\n\nexport const loadQuiz = createAction(LOAD_QUIZ);\nexport const changeQuiz = createAction(CHANGE_QUIZ);\nexport const selectOption = createAction(SELECT_OPTION);\nexport const goTo = createAction(GO_TO);\nexport const changeMode = createAction(CHANGE_MODE);\nexport const submit = createAction(SUBMIT);","export const LOAD_QUIZ = 'LOAD_QUIZ';\nexport const CHANGE_QUIZ = 'CHANGE_QUIZ';\nexport const SELECT_OPTION = 'SELECT_OPTION';\nexport const GO_TO = 'GO_TO';\nexport const CHANGE_MODE = 'CHANGE_MODE';\nexport const SUBMIT = 'SUBMIT';\n","import { connect } from 'react-redux';\nimport Quiz from '../components/Quiz';\nimport { \n\tloadQuiz,\n\tchangeQuiz, \n\tselectOption,\n\tgoTo,\n\tchangeMode,\n\tsubmit\n} from '../actions';\nimport { getQuizFromFile } from '../constants/quizCtrl';\n\nexport default connect(\n\t(state) => ({\n\t\tmode: state.getIn(['quizReducers', 'mode']),\n\t\tconfig: state.getIn(['quizReducers', 'config']),\n\t\tquizName: state.getIn(['quizReducers', 'quizName']),\n\t\tquiz: state.getIn(['quizReducers', 'quiz']),\n\t\tcurrentPage: state.getIn(['quizReducers', 'currentPage']),\n\t\ttotalItems: state.getIn(['quizReducers', 'totalItems']),\n\t\tquestions: state.getIn(['quizReducers', 'questions']),\n\t\tfilteredQuestions: state.getIn(['quizReducers', 'filteredQuestions'])\n\t}),\t\n\t(dispatch) => ({\n\t\tonLoadQuiz: (quizName) => {\n\t\t\tgetQuizFromFile(quizName, (data) => {\n\t\t\t\tdispatch(loadQuiz(data));\t\t\t\t\t\t\t\t\t\n\t\t\t});\n\t\t},\n\t  \tonSelectOption: (question, option) => () => {\n\t\t\tdispatch(selectOption({question: question.toJS(), option: option.toJS()}));\t\t\t\t\t\t\t\t\n\t\t},\n\t\tonChangeQuizName: (event) => {\n\t\t\tdispatch(changeQuiz(event.target.value));\t\t\t\t\t\t\t\t\t\n\t\t},\n\t\tonGoTo: (index) => () => {\n\t\t\tdispatch(goTo(index));\t\t\t\n\t\t},\n\t\tonChangeMode: (mode) => () => {\n\t\t\tdispatch(changeMode(mode));\t\t\t\t\t\t\t\n\t\t},\n\t\tonSubmitHandler: (mode) => () => {\n\t\t\tdispatch(submit('result'));\t\t\t\t\t\t\t\n\t\t}\n\t})\t\t\n)(Quiz);\n","import axios from 'axios';\n\nexport const getQuizFromFile = (file, callback) => {\n\t// http get to the file\n\taxios.get(file)\n\t\t\t .then(res => {\n\t\t\t\t\tcallback(res.data);\n\t\t\t });\n}\n","import React from 'react';\nimport QuizContainer from '../containers/QuizContainer';\n\nconst Main = () => (\n\t<QuizContainer />\n);\n\nexport default Main;\n","import Immutable from 'immutable';\n\n\nexport const defaultConfig = {\n\tallowBack: true,\n\tallowReview: true,\n\tautoMove: false,  // if true, it will move to next question automatically when answered.\n\tduration: 0,  // indicates the time in which quiz needs to be completed. post that, quiz will be automatically submitted. 0 means unlimited.\n\tpageSize: 1,\n\trequiredAll: false,  // indicates if you must answer all the questions before submitting.\n\trichText: false,\n\tshuffleQuestions: false,\n\tshuffleOption: false,\n\tshowClock: false,\n\tshowPager: true,\n\ttheme: \"none\"\n};\n\nexport const QuizState = Immutable.fromJS({\n\tquizName: \"data/csharp.json\",\n\tquiz: {\n\t\tId: 0,\n\t\tname: \"\",\n\t\tdescription: \"\"\n\t},\n\tconfig: defaultConfig,\n\tquestions: [],\n\ttotalItems: 0,\n\titemsPerPage: 0,\n\tcurrentPage: 0,\n\tmode: \"quiz\",\n\tfilteredQuestions: [],\n\tloading: true\n});\n","export const shuffle = function(array) {\n\tlet currentIndex = array.length, temp, randomIndex;\n\n\twhile (0 !== currentIndex) {\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex -= 1;\n\n\t\ttemp = array[currentIndex];\n\t\tarray[currentIndex] = array[randomIndex];\n\t\tarray[randomIndex] = temp;\n\t}\n\treturn array;\n};\n\nexport const extend = function(out) {\n\tout = out || {};\n\n\tfor(let i = 1; i < arguments.length; i++) {\n\t\tif(!arguments[i])\n\t\t\tcontinue;\n\n\t\tfor(let key in arguments[i]) {\n\t\t\tif(arguments[i].hasOwnProperty(key))\n\t\t\t\tout[key] = arguments[i][key];\n\t\t}\n\t}\n\treturn out;\n};\n\n/*\n * Watch current page and items per page\n * */\nexport const watch = function(questions, currentPage, itemsPerPage) {\n\tlet begin = (currentPage - 1) * itemsPerPage,\n\t\t\tend = begin + itemsPerPage;\n\treturn questions.slice(begin, end);\n};\n\n","import { handleActions } from 'redux-actions';\nimport { fromJS } from 'immutable';\n\nimport { defaultConfig, QuizState } from '../../constants/model';\nimport { extend, shuffle, watch } from '../../constants/helperService';\n\n/*\n * Handle all actions\n * */\n\nconst quizReducers = handleActions({\n\tLOAD_QUIZ: (state, { payload }) => {\n\t\tif(!state.get(\"loading\")){\n\t\t\treturn state;\n\t\t}\n\t\tlet config = extend({}, defaultConfig, payload.config);\n\t\tlet questions = config.shuffleQuestions ? shuffle(payload.questions) : payload.questions;\n\t\tlet itemsPerPage =  config.pageSize;\n\t\tlet currentPage = 1;\n\t\tlet filteredQuestions = watch(questions, currentPage, itemsPerPage);\n\t\treturn state.set(\"quiz\", fromJS(payload.quiz))\n\t\t\t\t\t\t\t\t\t\t\t.set(\"config\", fromJS(config))\n\t\t\t\t\t\t\t\t\t\t\t.set(\"questions\", fromJS(questions))\n\t\t\t\t\t\t\t\t\t\t\t.set(\"totalItems\", questions.length)\n\t\t\t\t\t\t\t\t\t\t\t.set(\"itemsPerPage\", itemsPerPage)\n\t\t\t\t\t\t\t\t\t\t\t.set(\"currentPage\", currentPage)\n\t\t\t\t\t\t\t\t\t\t\t.set(\"filteredQuestions\", fromJS(filteredQuestions))\n\t\t\t\t\t\t\t\t\t\t\t.set(\"loading\", false)\n\t},\n\tCHANGE_QUIZ: (state, { payload }) => {\n\t\treturn state.set(\"quizName\", payload).set(\"loading\", true);\n\t},\n\tSELECT_OPTION: (state, { payload }) => {\n\t\t// store the selected options\n\t\tlet questions = state.get('questions').toJS();\n\t\tlet question = payload.question;\n\t\tlet option = payload.option;\n\t\tfor(let key in question.Options) {\n\t\t\tif(question.Options[key].Id === option.Id) {\n\t\t\t\tquestion.Options[key].Selected = true;\n\t\t\t} else {\n\t\t\t\tquestion.Options[key].Selected = false;\n\t\t\t}\n\t\t}\n\t\tfor(let key in questions) {\n\t\t\tif(questions[key].Id === question.Id) {\n\t\t\t\tquestions[key] = question;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// move to next page, except the last page\n\t\tlet config = state.get('config').toJS();\n\t\tlet currentPage = state.get('currentPage');\n\t\tlet totalItems = state.get('totalItems');\n\t\tlet itemsPerPage = state.get('itemsPerPage');\n\t\tif (config.autoMove === true && currentPage < totalItems){\n\t\t\tcurrentPage++;\n\n\t\t\tlet filteredQuestions = watch(questions, currentPage, itemsPerPage);\n\t\t\treturn state.set('currentPage', currentPage)\n\t\t\t\t\t\t\t\t\t.set('filteredQuestions', fromJS(filteredQuestions))\n\t\t\t\t\t\t\t\t\t.set('questions', fromJS(questions));\n\t\t}\n\t\tlet filteredQuestions = watch(questions, currentPage, itemsPerPage);\n\t\treturn state.set('filteredQuestions', fromJS(filteredQuestions))\n\t\t\t\t\t.set('questions', fromJS(questions));\n\t},\n\t// navigate to page\n\tGO_TO: (state, { payload }) => {\n\t\tif (payload > 0 && payload <= state.get('totalItems')) {\n\t\t\tlet questions = state.get('questions').toJS();\n\t\t\tlet itemsPerPage = state.get('itemsPerPage');\n\t\t\tlet filteredQuestions = watch(questions, payload, itemsPerPage);\n\t\t\treturn state.set('filteredQuestions', fromJS(filteredQuestions))\n\t\t\t\t\t\t.set('currentPage', payload)\n\t\t\t\t\t\t.set('mode', 'quiz');\n\t\t}\n\t\treturn state;\n\t},\n\tCHANGE_MODE: (state, { payload }) => {\n\t\treturn state.set('mode', payload);\n\t},\n\tSUBMIT: (state, { payload }) => {\n\t\treturn state.set('mode', 'result');\n\t}\n}, QuizState);\n\nexport default quizReducers\n","import { combineReducers } from 'redux-immutable';\nimport quizReducers from './data/quizReducers';\n\nconst rootReducer = combineReducers({quizReducers});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport Immutable from 'immutable';\nimport rootReducer from '../reducers';\n\nconst initialState = Immutable.Map();\n\nexport default createStore(rootReducer, initialState);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport Main from './components/Main';\nimport store from './store';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<Main />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}