{"version":3,"sources":["serviceWorker.js","components/Option.js","components/FilteredQuestion.js","components/Answer.js","components/CheckBox.js","components/ResultQuestion.js","components/Quiz.js","actions/quizActions.js","constants/actionTypes.js","constants/quizCtrl.js","containers/QuizContainer.js","components/Main.js","constants/model.js","constants/helperService.js","reducers/data/quizReducers.js","reducers/index.js","store/configureStore.js","index.js"],"names":["Boolean","window","location","hostname","match","Option","_ref","option","question","onSelectOption","react_default","a","createElement","className","htmlFor","get","id","type","checked","onChange","filteredQuestion","currentPage","totalItems","name","options","Fragment","map","subIndex","components_Option","key","Answer","questions","index","isAnswered","answered","toJS","Options","forEach","array","Selected","CheckBox","disabled","ResultQuestion","isCorrect","result","IsAnswer","components_CheckBox","classNames","Quiz","onLoadQuiz","onChangeQuizName","onGoTo","onChangeMode","onSubmitHandler","mode","config","quiz","quizName","filteredQuestions","onLoad","value","react-hide","FilteredQuestion","onClick","components_Answer","components_ResultQuestion","changeQuiz","createAction","selectOption","goTo","changeMode","submit","loadQuiz","file","callback","axios","then","res","data","connect","state","getIn","dispatch","event","target","Main","QuizContainer","defaultConfig","allowBack","allowReview","autoMove","duration","pageSize","requiredAll","richText","shuffleQuestions","shuffleOption","showClock","showPager","theme","QuizState","Immutable","fromJS","Id","description","itemsPerPage","watch","begin","end","slice","quizReducers","handleActions","CHANGE_QUIZ","payload","out","i","arguments","length","hasOwnProperty","extend","temp","randomIndex","currentIndex","Math","floor","random","shuffle","set","SELECT_OPTION","_ref2","GO_TO","_ref3","CHANGE_MODE","_ref4","SUBMIT","_ref5","rootReducer","combineReducers","initialState","Map","createStore","ReactDOM","render","es","store","components_Main","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.294b381e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst Option = ({\n    option,\n    question,\n    onSelectOption\n}) => {\n    return (\n        <div className=\"col-md-6\">\n            <div className=\"option\">\n                <label htmlFor={option.get('Id')}>\n                    <input id={option.get('Id')} type=\"checkbox\" checked={option.get('Selected') === true} \n                        onChange={onSelectOption(question, option)}/>\n                    {option.get('Name')}\n                </label>\n            </div>\t\n        </div>\n    )\n}\n\nexport default Option;","import React from 'react';\nimport Option from './Option';\n\nconst filteredQuestion = ({\n    currentPage,\n    totalItems,\n    name,\n    question,\n    options,\n    onSelectOption\n}) => {\n    return (\n        <>\n            <div className=\"label label-warning\">Question {currentPage} of {totalItems}.</div>\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <h2>{currentPage}. <span>{name}</span></h2>\n                </div>\n            </div>\n            <div className=\"row text-left options\">\n            {\n                options.map((option, subIndex) => (\n                    <Option key={subIndex} question={question} option={option} onSelectOption={onSelectOption}/>\n                ))\n            }\n            </div>\n        </>\n    );\n};\n\nexport default filteredQuestion;","import React from 'react';\n\nconst Answer = ({\n    questions,\n    index\n}) => {\n    /*\n\t * Determine if a question is answered\n\t */\n    const isAnswered = (index) => {\n        let answered = 'Not Answered';\n        questions.toJS()[index].Options.forEach(function (option, index, array) {\n            if (option.Selected === true) {\n                answered = 'Answered';\n                return false;\n            }\n        });\n        return answered;\n    };\n    return (\n        <div className=\"col-sm-4\">\n            <div className={ isAnswered(index) === 'Answered'? 'answered': 'not-answered' }>{index + 1}. {isAnswered(index)}</div>\n        </div>\n    );\n};\n\nexport default Answer;","import React from 'react';\n\nconst CheckBox = ({\n    option\n}) => {\n    return (\n        // show correct answer if wrong\n        <div className={\"col-md-6\" + (!option.get('Selected') && option.get('IsAnswer') ? \" alert-success\" : \"\")}>\n            <input id={option.get('Id')} type=\"checkbox\" disabled=\"disabled\" checked={option.get('Selected') === true}/>\n                {option.get('Name')}\n        </div>\n    );\n};\n\nexport default CheckBox;","import React from 'react';\nimport classNames from 'classnames';\nimport CheckBox from './CheckBox';\n\nconst ResultQuestion = ({\n    questions,\n    index,\n    question\n}) => {\n    /*\n\t * Determine if a question is answered correctly\n\t */\n    const isCorrect = () => {\n        let result = 'wrong';\n        question.toJS().Options.forEach(function (option) {\n            if (option.Selected === true && option.IsAnswer === true) {\n                result = 'correct';\n            }\n        });\n        return result;\n    };\n\n    return (\n        <div className=\"result-question\">\n            <h4>{index + 1}. {question.get('Name')}</h4>\n            <div className=\"row\">\n            {\n                question.get('Options').map((option, subIndex) => (\n                    <CheckBox key={subIndex} option={option}/>\n                ))\n            }\n            </div>\n            <h4 className={classNames('alert', isCorrect(index) === 'correct'? 'alert-success': 'alert-danger')}>Your answer is {isCorrect()}.</h4>\n        </div>\n    );\n};\n\nexport default ResultQuestion;","import React from 'react';\nimport classNames from 'classnames';\nimport FilteredQuestion from './FilteredQuestion';\nimport Answer from './Answer';\nimport ResultQuestion from './ResultQuestion';\n\nconst Quiz = ({\n\tonLoadQuiz,\n\tonChangeQuizName,\n\tonSelectOption,\n\tonGoTo,\n\tonChangeMode,\n\tonSubmitHandler,\n\tmode,\n\tconfig,\n\tquiz,\n\tquizName,\n\tcurrentPage,\n\ttotalItems,\n\tquestions,\n\tfilteredQuestions\n}) => {\n\treturn (\n\t\t<div className=\"container\" onLoad={onLoadQuiz(quizName)}>\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-md-8\">\n\t\t\t\t\t\t<h3>Quiz Application</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-4 header-right\">\n\t\t\t\t\t\tSelect Quiz:\n\t\t\t\t\t\t<select id=\"quizList\" value={quizName} onChange={onChangeQuizName}>\n\t\t\t\t\t\t\t<option value=\"data/aspnet.js\">Asp.Net</option>\n\t\t\t\t\t\t\t<option value=\"data/csharp.js\">C Sharp</option>\n\t\t\t\t\t\t\t<option value=\"data/designPatterns.js\">Design Patterns</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<hr/>\n\t\t\t</div>\n\t\t\t<div id=\"quiz\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-md-12\"><h1 className=\"center\">{quiz.get('name')}</h1><hr /></div>\n\t\t\t\t</div>\n\t\t\t\t<div className={classNames({'react-hide': mode !== 'quiz'})}>\n\t\t\t\t\t{\n\t\t\t\t\t\tfilteredQuestions.map((question, index) => (\n\t\t\t\t\t\t\t<FilteredQuestion key={index} currentPage={currentPage} totalItems={totalItems} question={question} \n\t\t\t\t\t\t\t\tname={question.get('Name')} options={question.get('Options')} onSelectOption={onSelectOption}/>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t\t<hr />\n\t\t\t\t\t<div className=\"quizNav\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button className={classNames('btn', 'btn-default', {'react-hide': !config.get('allowBack')})} onClick={onGoTo(1)}>First</button>{\" \"}\n\t\t\t\t\t\t\t<button className={classNames('btn', 'btn-default', {'react-hide': !config.get('allowBack')})} onClick={onGoTo(currentPage - 1)}>Prev</button>{\" \"}\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={onGoTo(currentPage + 1)}>Next</button>{ \" \" }\n\t\t\t\t\t\t\t<button className={classNames('btn', 'btn-default', {'react-hide': !config.get('allowBack')})} onClick={onGoTo(totalItems)}>Last</button>{\" \"}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={classNames('row', 'review', {'react-hide': mode !== 'review'})}>\n\t\t\t\t{\n\t\t\t\t\tquestions.map((question, index) => (\n\t\t\t\t\t\t<Answer key={index} questions={questions} index={index}/>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<div className={classNames('result', {'react-hide': mode !== 'result'})}>\n\t\t        <h2>Quiz Result</h2>\n\t\t        {\n\t\t        \tquestions.map((question, index) => (\n\t\t\t\t\t\t<ResultQuestion key={index} questions={questions} index={index} question={question}/>\n\t\t\t\t\t))\n\t\t        }\n\t\t        <h4 className=\"alert alert-info text-center\">You may close this window now.</h4>\n\t\t    </div>\n\t\t\t<hr />\n\t\t\t<div className={classNames({'react-hide': mode === 'result'})}>\n\t\t\t\t<button className=\"btn btn-default\" onClick={onChangeMode('quiz')}>Quiz</button>{\" \"} \n\t\t\t\t<button className=\"btn btn-default\" onClick={onChangeMode('review')}>Review</button>{\" \" }\n\t\t\t\t<button className=\"btn btn-default\" onClick={onSubmitHandler('result')}>Submit Quiz</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Quiz;\n","import { createAction } from 'redux-actions';\nimport { \n\tCHANGE_QUIZ,\n\tSELECT_OPTION,\n\tGO_TO,\n\tCHANGE_MODE,\n\tSUBMIT\n} from '../constants/actionTypes';\n\nexport const changeQuiz = createAction(CHANGE_QUIZ);\nexport const selectOption = createAction(SELECT_OPTION);\nexport const goTo = createAction(GO_TO);\nexport const changeMode = createAction(CHANGE_MODE);\nexport const submit = createAction(SUBMIT);","export const CHANGE_QUIZ = 'CHANGE_QUIZ';\nexport const SELECT_OPTION = 'SELECT_OPTION';\nexport const GO_TO = 'GO_TO';\nexport const CHANGE_MODE = 'CHANGE_MODE';\nexport const SUBMIT = 'SUBMIT';\n","import axios from 'axios';\n\nexport const loadQuiz = (file, callback) => {\n\t// http get to the file\n\taxios.get(file)\n\t\t\t .then(res => {\n\t\t\t\t\tcallback(res.data);\n\t\t\t });\n}\n","import { connect } from 'react-redux';\nimport Quiz from '../components/Quiz';\nimport { \n\tchangeQuiz, \n\tselectOption,\n\tgoTo,\n\tchangeMode,\n\tsubmit\n} from '../actions';\nimport { loadQuiz } from '../constants/quizCtrl';\n\nexport default connect(\n\t(state) => ({\n\t\tmode: state.getIn(['quizReducers', 'mode']),\n\t\tconfig: state.getIn(['quizReducers', 'config']),\n\t\tquizName: state.getIn(['quizReducers', 'quizName']),\n\t\tquiz: state.getIn(['quizReducers', 'quiz']),\n\t\tcurrentPage: state.getIn(['quizReducers', 'currentPage']),\n\t\ttotalItems: state.getIn(['quizReducers', 'totalItems']),\n\t\tquestions: state.getIn(['quizReducers', 'questions']),\n\t\tfilteredQuestions: state.getIn(['quizReducers', 'filteredQuestions'])\n\t}),\t\n\t(dispatch) => ({\n\t\tonLoadQuiz: (quizName) => {\n\t\t\tloadQuiz(quizName, function(data){\n\t\t\t\tdispatch(changeQuiz(data));\t\t\t\t\t\t\t\t\t\n\t\t\t});\n\t\t},\n\t  \tonSelectOption: (question, option) => () => {\n\t\t\tdispatch(selectOption({question: question.toJS(), option: option.toJS()}));\t\t\t\t\t\t\t\t\n\t\t},\n\t\tonChangeQuizName: (event) => {\n\t\t\tloadQuiz(event.target.value, function(data){\n\t\t\t\tdispatch(changeQuiz(data));\t\t\t\t\t\t\t\t\t\n\t\t\t});\t\t\t\t\t\t\t\t\t\n\t\t},\n\t\tonGoTo: (index) => () => {\n\t\t\tdispatch(goTo(index));\t\t\t\n\t\t},\n\t\tonChangeMode: (mode) => () => {\n\t\t\tdispatch(changeMode(mode));\t\t\t\t\t\t\t\n\t\t},\n\t\tonSubmitHandler: (mode) => () => {\n\t\t\tdispatch(submit('result'));\t\t\t\t\t\t\t\n\t\t}\n\t})\t\t\n)(Quiz);\n","import React from 'react';\nimport QuizContainer from '../containers/QuizContainer';\n\nconst Main = () => (\n\t<QuizContainer />\n);\n\nexport default Main;\n","import Immutable from 'immutable';\n\n\nexport const defaultConfig = {\n\tallowBack: true,\n\tallowReview: true,\n\tautoMove: false,  // if true, it will move to next question automatically when answered.\n\tduration: 0,  // indicates the time in which quiz needs to be completed. post that, quiz will be automatically submitted. 0 means unlimited.\n\tpageSize: 1,\n\trequiredAll: false,  // indicates if you must answer all the questions before submitting.\n\trichText: false,\n\tshuffleQuestions: false,\n\tshuffleOption: false,\n\tshowClock: false,\n\tshowPager: true,\n\ttheme: \"none\"\n};\n\nexport const QuizState = Immutable.fromJS({\n\tquizName: \"data/csharp.js\",\n\tquiz: {\n\t\tId: 0,\n\t\tname: \"\",\n\t\tdescription: \"\"\n\t},\n\tconfig: defaultConfig,\n\tquestions: [],\n\ttotalItems: 0,\n\titemsPerPage: 0,\n\tcurrentPage: 0,\n\tmode: \"quiz\",\n\tfilteredQuestions: []\n});\n","export const shuffle = function(array) {\n\tlet currentIndex = array.length, temp, randomIndex;\n\n\twhile (0 !== currentIndex) {\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex -= 1;\n\n\t\ttemp = array[currentIndex];\n\t\tarray[currentIndex] = array[randomIndex];\n\t\tarray[randomIndex] = temp;\n\t}\n\treturn array;\n};\n\nexport const extend = function(out) {\n\tout = out || {};\n\n\tfor(let i = 1; i < arguments.length; i++) {\n\t\tif(!arguments[i])\n\t\t\tcontinue;\n\n\t\tfor(let key in arguments[i]) {\n\t\t\tif(arguments[i].hasOwnProperty(key))\n\t\t\t\tout[key] = arguments[i][key];\n\t\t}\n\t}\n\treturn out;\n};\n\n/*\n * Watch current page and items per page\n * */\nexport const watch = function(questions, currentPage, itemsPerPage) {\n\tlet begin = (currentPage - 1) * itemsPerPage,\n\t\t\tend = begin + itemsPerPage;\n\treturn questions.slice(begin, end);\n};\n\n","import { handleActions } from 'redux-actions';\nimport { fromJS } from 'immutable';\nimport { defaultConfig, QuizState } from '../../constants/model';\nimport { extend, shuffle, watch } from '../../constants/helperService';\n\n/*\n * Handle all actions\n * */\nconst quizReducers = handleActions({\n\tCHANGE_QUIZ: (state, { payload }) => {\n\t\tlet quiz = state.get(\"quiz\");\n\t\tif(quiz.get(\"Id\") === payload.quiz.Id){\n\t\t\t// do nothing with the same quiz\n\t\t\treturn state;\n\t\t}\n\t\tlet config = extend({}, defaultConfig, payload.config);\n\t\tlet questions = config.shuffleQuestions ? shuffle(payload.questions) : payload.questions;\n\t\tlet itemsPerPage =  config.pageSize;\n\t\tlet currentPage = 1;\n\n    let filteredQuestions = watch(questions, currentPage, itemsPerPage);\n\t\tlet retState = state.set(\"quiz\", fromJS(payload.quiz))\n\t\t\t\t\t\t\t\t\t\t\t\t.set(\"config\", fromJS(config))\n\t\t\t\t\t\t\t\t\t\t\t\t.set(\"questions\", fromJS(questions))\n\t\t\t\t\t\t\t\t\t\t\t\t.set(\"totalItems\", questions.length)\n\t\t\t\t\t\t\t\t\t\t\t\t.set(\"itemsPerPage\", itemsPerPage)\n\t\t\t\t\t\t\t\t\t\t\t\t.set(\"currentPage\", currentPage)\n\t\t\t\t\t\t\t\t\t\t\t\t.set(\"filteredQuestions\", fromJS(filteredQuestions));\n\n\t\treturn retState;\t\t\t\t\t\t\t\t\n\t},\n\tSELECT_OPTION: (state, { payload }) => {\n\t\t// store the selected options\n\t\tlet questions = state.get('questions').toJS();\n\t\tlet question = payload.question;\n\t\tlet option = payload.option;\n\t\tfor(let key in question.Options) {\n\t\t\tif(question.Options[key].Id === option.Id) {\n\t\t\t\tquestion.Options[key].Selected = true;\n\t\t\t} else {\n\t\t\t\tquestion.Options[key].Selected = false;\n\t\t\t}\n\t\t}\n\t\tfor(let key in questions) {\n\t\t\tif(questions[key].Id === question.Id) {\n\t\t\t\tquestions[key] = question;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// move to next page, except the last page\n\t\tlet config = state.get('config').toJS();\n\t\tlet currentPage = state.get('currentPage');\n\t\tlet totalItems = state.get('totalItems');\n\t\tlet itemsPerPage = state.get('itemsPerPage');\n\t\tif (config.autoMove === true && currentPage < totalItems){\n\t\t\tcurrentPage++;\n\n\t\t\tlet filteredQuestions = watch(questions, currentPage, itemsPerPage);\n\t\t\treturn state.set('currentPage', currentPage)\n\t\t\t\t\t\t\t\t\t.set('filteredQuestions', fromJS(filteredQuestions))\n\t\t\t\t\t\t\t\t\t.set('questions', fromJS(questions));\n\t\t}\n\t\tlet filteredQuestions = watch(questions, currentPage, itemsPerPage);\n\t\treturn state.set('filteredQuestions', fromJS(filteredQuestions))\n\t\t\t\t\t.set('questions', fromJS(questions));\n\t},\n\t// navigate to page\n\tGO_TO: (state, { payload }) => {\n\t\tif (payload > 0 && payload <= state.get('totalItems')) {\n\t\t\tlet questions = state.get('questions').toJS();\n\t\t\tlet itemsPerPage = state.get('itemsPerPage');\n\t\t\tlet filteredQuestions = watch(questions, payload, itemsPerPage);\n\t\t\treturn state.set('filteredQuestions', fromJS(filteredQuestions))\n\t\t\t\t\t\t.set('currentPage', payload)\n\t\t\t\t\t\t.set('mode', 'quiz');\n\t\t}\n\t\treturn state;\n\t},\n\tCHANGE_MODE: (state, { payload }) => {\n\t\treturn state.set('mode', payload);\n\t},\n\tSUBMIT: (state, { payload }) => {\n\t\treturn state.set('mode', 'result');\n\t}\n}, QuizState);\n\nexport default quizReducers\n","import { combineReducers } from 'redux-immutable';\nimport quizReducers from './data/quizReducers';\n\nconst rootReducer = combineReducers({quizReducers});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport Immutable from 'immutable';\nimport rootReducer from '../reducers';\n\nconst initialState = Immutable.Map();\n\nexport default createStore(rootReducer, initialState);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport Main from './components/Main';\nimport store from './store';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<Main />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}